#PBS -l walltime=20:00:00
#PBS -l ncpus=28,mem=32gb
#PBS -N calib-delta-cluster
#PBS -m abe
#PBS -M pmsl.academic@gmail.com
#PBS -o /mnt/backedup/home/paulaSL/Code/hpc-sandbox/oe-files
#PBS -e /mnt/backedup/home/paulaSL/Code/hpc-sandbox/oe-files
#PBS -J 1-20

# Paula Sanz-Leon, Sep 2021, QIMRB

# Load packages we need
module load covasim/1.7.6

# Export path to custom packages we need
export PYTHONPATH=$HOME/Code/covasim-qld-model:$PYTHONPATH

# Path to directory where we are going to store results
set -e  # tells a PBS job or bash script to exit on any processes non zero  exit status
SCRATCH_RESULTS="$TMPDIR"
CODE_DIRECTORY='/mnt/backedup/home/paulaSL/Code/covasim-qld-model/qld-model'
# Define number of cpus to be passed to sc.parallelize()
# Must match the number of cpus requested with PBS
NCPUS=28

# Change to where we have the code
cd "$CODE_DIRECTORY"
for iqf in $(seq 1.00 1.0 2.0); do
    IQF=$iqf
    python run_qld_model_resurgence.py --ncpus "$NCPUS" --nruns 1000 --label 'cluster' \
                                       --cluster_size "$PBS_ARRAY_INDEX" --iq_factor "$IQF" \
                                       --global_beta 0.028231366\
                                       --num_tests 8360 \
                                       --results_path "$SCRATCH_RESULTS"
done
# Create directory to save results in /working
WORKING_DIR='/working/lab_jamesr/paulaSL/covid-results'
# Save only the job number
JOBNUM=${PBS_JOBID:0:8}
WORKING_RESULTS=$WORKING_DIR/results-$JOBNUM

# Create directory if it does not exist
mkdir -p "$WORKING_RESULTS/sim-data"
mkdir -p "$WORKING_RESULTS/figures"

cd "$WORKING_RESULTS" || exit

# Move stuff 
scp "$SCRATCH_RESULTS/sim-data/"*.obj sim-data/.
scp "$SCRATCH_RESULTS/sim-data/"*.csv sim-data/.
scp "$SCRATCH_RESULTS/figures/"*.png figures/.
